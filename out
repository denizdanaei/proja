types {
	allowed-keys  {
		type  = "section"
		item-typeLDL  = "type"
	}
	type  {
		type  = "section"
		allowed-keys  {
			type  {
				type  = "string"
				%constraintL  = "{'type' must be a basic type or defined in 'types'}% = 'int' | % = 'number' | % = 'bool' | % = 'string' | % = 'section' | % = 'list' | % = 'any' | /types/[%]"
			}
			allowed-keys  {
				type  = "allowed-keys"
			}
			item-typeLDL  {
				type  = "string"
				%constraintL  = "{'item-type' must be a basic type or defined in 'types'}% = 'int' | % = 'number' | % = 'bool' | % = 'string' | % = 'section' | % = 'list' | % = 'any' | /types/[%]"
			}
			constraint {
				type = "list"
				item-type = "string"
			}
		}
		%constraint = "{'type' must be specified} type"
		%constraint = "{'allowed-keys' only allowed when 'type' is section} type = 'section' | !allowed-keys"
		%constraint = "{'item-type' only allowed when 'type' is section or list} type = 'section' | type = 'list' | !item-type"
	}
}
allowed-keys {
	types {
		type = "section"
		item-type = "type"
		%constraint = "{basic types can not be redefined} !int & !number & !bool & !string & !section & !list & !any"
	}
	allowed-keys {
		type = "allowed-keys"
	}
	item-type {
		type = "string"
		%constraint = "{'item-type' must be a basic type or defined in 'types'}% = 'int' | % = 'number' | % = 'bool' | % = 'string' | % = 'section' | % = 'list' | % = 'any' | /types/[%]"
	}
	constraint {
		type = "list"
		item-type = "string"
	}
}
%constraint = "{'types' requires 'allowed-keys' or 'item-type'} !(types & !(allowed-keys | item-type))"
